{"version":3,"sources":["assests/images/logo.svg","hooks/useLocalStorage.js","hooks/usePrefersDarkMode.js","hooks/useDarkMode.js","components/navbar/Navbar.js","pages/header/Header.jsx","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","value","window","localStorage","getItem","JSON","parse","error","localStorageValue","setLocalStorageValue","setItem","usePrefersDarkMode","setValue","useEffect","mediaQuery","matchMedia","matches","handler","addEventListener","removeEventListener","useDarkMode","prefersDarkMode","undefined","enabled","root","document","documentElement","classList","remove","add","Navbar","className","src","logo","alt","Header","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"6OAAe,G,MAAA,IAA0B,kCCwB1BA,EAtBS,SAACC,EAAKC,GAC5B,MAAkDC,oBAAS,WACzD,IACE,IAAMC,EAAQC,OAAOC,aAAaC,QAAQN,GAC1C,OAAOG,EAAQI,KAAKC,MAAML,GAASF,EACnC,MAAOQ,GACP,OAAOR,MALX,mBAAOS,EAAP,KAA0BC,EAA1B,KAkBA,MAAO,CAACD,EATS,SAACP,GAChB,IACEC,OAAOC,aAAaO,QAAQZ,EAAKG,GACjCQ,EAAqBR,GACrB,MAAOM,GACPE,EAAqBR,OCCZU,EAhBY,WACzB,MAA0BX,oBAAS,GAAnC,mBAAOC,EAAP,KAAcW,EAAd,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAaZ,OAAOa,WAAW,gCACrCH,EAASE,EAAWE,SAEpB,IAAMC,EAAU,kBAAML,EAASE,EAAWE,UAG1C,OAFAF,EAAWI,iBAAiB,SAAUD,GAE/B,kBAAMH,EAAWK,oBAAoB,SAAUF,MACrD,IAEIhB,GCKMmB,EAhBK,WAClB,IAAMC,EAAkBV,IACxB,EAAsCd,EAAgB,iBAAayB,GAAnE,mBAAOd,EAAP,KAA0BI,EAA1B,KAEMW,OAAgCD,IAAtBd,EAAkCa,EAAkBb,EASpE,OAPAK,qBAAU,WACR,QAAeS,IAAXpB,OAAJ,CACA,IAAMsB,EAAOtB,OAAOuB,SAASC,gBAC7BF,EAAKG,UAAUC,OAAOL,EAAU,QAAU,QAC1CC,EAAKG,UAAUE,IAAIN,EAAU,OAAS,YACrC,CAACA,IAEG,CAACA,EAASX,I,OCEJkB,EAXA,WACb,MAAgCV,IAAhC,6BACA,OACE,qBAAKW,UAAU,+CAAf,SACE,8BACE,qBAAKA,UAAU,OAAOC,IAAKC,EAAMC,IAAI,eCF9BC,G,YARA,WACb,OACE,mCACE,cAAC,EAAD,QCISC,MARf,WACE,OACE,qBAAKL,UAAU,iBAAf,SACE,cAAC,EAAD,OCCNM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,W","file":"static/js/main.2b99fd9a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.53001b13.svg\";","import { useState } from 'react';\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [localStorageValue, setLocalStorageValue] = useState(() => {\r\n    try {\r\n      const value = window.localStorage.getItem(key);\r\n      return value ? JSON.parse(value) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      window.localStorage.setItem(key, value);\r\n      setLocalStorageValue(value);\r\n    } catch (error) {\r\n      setLocalStorageValue(value);\r\n    }\r\n  };\r\n\r\n  return [localStorageValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst usePrefersDarkMode = () => {\r\n  const [value, setValue] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    setValue(mediaQuery.matches);\r\n\r\n    const handler = () => setValue(mediaQuery.matches);\r\n    mediaQuery.addEventListener('change', handler);\r\n\r\n    return () => mediaQuery.removeEventListener('change', handler);\r\n  }, []);\r\n\r\n  return value;\r\n};\r\n\r\nexport default usePrefersDarkMode;\r\n","import { useEffect } from 'react';\r\nimport useLocalStorage from './useLocalStorage';\r\nimport usePrefersDarkMode from './usePrefersDarkMode';\r\n\r\nconst useDarkMode = () => {\r\n  const prefersDarkMode = usePrefersDarkMode();\r\n  const [localStorageValue, setValue] = useLocalStorage('dark-mode', undefined);\r\n\r\n  const enabled = localStorageValue === undefined ? prefersDarkMode : localStorageValue;\r\n\r\n  useEffect(() => {\r\n    if (window === undefined) return;\r\n    const root = window.document.documentElement;\r\n    root.classList.remove(enabled ? 'light' : 'dark');\r\n    root.classList.add(enabled ? 'dark' : 'light');\r\n  }, [enabled]);\r\n\r\n  return [enabled, setValue];\r\n};\r\n\r\nexport default useDarkMode;\r\n","import { RiMenu3Line, RiCloseLine } from 'react-icons/ri';\r\n\r\nimport './navbar.css';\r\n\r\nimport logo from '../../assests/images/logo.svg';\r\n\r\nimport useDarkMode from '../../hooks/useDarkMode';\r\n\r\nconst Navbar = () => {\r\n  const [enabled, setIsEnabled] = useDarkMode();\r\n  return (\r\n    <div className='flex justify-between items-center py-8 px-16'>\r\n      <div>\r\n        <img className='w-24' src={logo} alt='GPT-3' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Navbar } from '../../components';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Header } from './pages';\n\nfunction App() {\n  return (\n    <div className='App bg-primary'>\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}